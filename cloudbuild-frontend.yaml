steps:
  # Build the frontend container with optimized caching
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.frontend',
      '-t', 'gcr.io/$PROJECT_ID/colmap-frontend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/colmap-frontend:latest',
      '--cache-from', 'gcr.io/$PROJECT_ID/colmap-frontend:latest',
      '.'
    ]
  
  # Push the frontend container images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/colmap-frontend']
  
  # Deploy frontend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'colmap-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/colmap-frontend:$COMMIT_SHA'
      - '--region'
      - 'northamerica-south1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--concurrency'
      - '80'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'NODE_ENV=production,COLMAP_WORKER_URL=https://colmap-app-525587424361.northamerica-south1.run.app'
      - '--execution-environment'
      - 'gen2'

# Optimized build options for frontend
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  substitution_option: 'ALLOW_LOOSE'

timeout: '1200s'

substitutions:
  _REGION: 'northamerica-south1'
  _SERVICE_NAME: 'colmap-frontend'