# GPU-Accelerated COLMAP Worker for Google Cloud Run
FROM nvidia/cuda:11.8-devel-ubuntu20.04

# Prevent interactive timezone configuration
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    python3.11 \
    python3.11-dev \
    python3-pip \
    cmake \
    build-essential \
    git \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-test-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libglew-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libcgal-dev \
    libceres-dev \
    ffmpeg \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0-0 \
    libgl1-mesa-glx \
    procps \
    curl \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for python3.11
RUN ln -sf /usr/bin/python3.11 /usr/bin/python3
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Install COLMAP from source with GPU support
RUN git clone https://github.com/colmap/colmap.git && \
    cd colmap && \
    git checkout dev && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_CUDA_ARCHITECTURES=native \
             -DCUDA_ENABLED=ON \
             -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    cd / && \
    rm -rf colmap

# Create a non-root user for security
RUN groupadd --system --gid 1001 appgroup && \
    useradd --system --uid 1001 --gid 1001 --create-home appuser

# Install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir -r requirements.txt

# Copy application
COPY main.py .

# Create necessary directories
RUN mkdir -p /tmp && \
    chmod 777 /tmp

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Set environment variables for Cloud Run
ENV PORT=8080
ENV STORAGE_BUCKET=colmap-processing-bucket

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=30s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE $PORT

# Switch to non-root user (but with access to GPU)
USER appuser

# Run application
CMD exec python3 -m uvicorn main:app --host 0.0.0.0 --port $PORT --workers 1 --timeout-keep-alive 300
