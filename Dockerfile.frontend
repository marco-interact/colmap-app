# Stage 1: Build the Next.js application
FROM node:20-slim AS builder

# Set the working directory
WORKDIR /app

# Accept build arguments
ARG NEXT_PUBLIC_COLMAP_WORKER_URL
ENV NEXT_PUBLIC_COLMAP_WORKER_URL=$NEXT_PUBLIC_COLMAP_WORKER_URL

# Debug: Print the worker URL being used
RUN echo "üîç Building with worker URL: $NEXT_PUBLIC_COLMAP_WORKER_URL"

# Copy package files and install all dependencies
COPY package.json package-lock.json ./
RUN npm install

# Copy the rest of the source code
COPY . .

# Build the application for production with environment variables
RUN npm run build

# ---

# Stage 2: Create the lean production image
FROM node:20-slim AS production

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for better security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy only the necessary production files from the builder stage
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Switch to non-root user
USER nextjs

# Set environment variables for Cloud Run
ENV NODE_ENV=production
ENV PORT=8080
ENV HOSTNAME=0.0.0.0

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl --fail http://localhost:${PORT:-8080}/api/health || exit 1

# Expose port (Cloud Run will inject PORT env var)
EXPOSE $PORT

# Use exec form and respect Cloud Run PORT env var
CMD ["sh", "-c", "npm start -- -p ${PORT:-8080}"]

