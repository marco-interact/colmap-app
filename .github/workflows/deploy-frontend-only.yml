name: Deploy Frontend Only (Debug)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: colmap-app
  REGION: us-central1
  FRONTEND_SERVICE: colmap-frontend

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - Check secrets
      run: |
        echo "🔍 Checking if secrets are configured..."
        if [ -n "${{ secrets.WIF_PROVIDER }}" ]; then
          echo "✅ WIF_PROVIDER is set"
        else
          echo "❌ WIF_PROVIDER is not set"
        fi
        if [ -n "${{ secrets.WIF_SERVICE_ACCOUNT }}" ]; then
          echo "✅ WIF_SERVICE_ACCOUNT is set"
        else
          echo "❌ WIF_SERVICE_ACCOUNT is not set"
        fi

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Debug - Check authentication
      run: |
        echo "🔍 Testing gcloud authentication..."
        gcloud auth list
        gcloud config get-value project
        gcloud projects describe $PROJECT_ID

    - name: Build simple test image
      run: |
        echo "🔍 Building simple test image..."
        echo "FROM nginx:alpine" > Dockerfile.test
        echo "RUN echo '<h1>Frontend Test</h1>' > /usr/share/nginx/html/index.html" >> Dockerfile.test
        
        docker build -t gcr.io/$PROJECT_ID/test-frontend -f Dockerfile.test .
        docker push gcr.io/$PROJECT_ID/test-frontend

    - name: Deploy test service
      run: |
        echo "🚀 Deploying test frontend service..."
        gcloud run deploy test-frontend \
          --image gcr.io/$PROJECT_ID/test-frontend \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --port 80 \
          --max-instances 1 \
          --min-instances 0

    - name: Output test URL
      run: |
        echo "🚀 Test deployment complete!"
        echo "Test URL: $(gcloud run services describe test-frontend --region $REGION --format 'value(status.url)')"
