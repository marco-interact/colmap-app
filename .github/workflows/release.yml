name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: marco-interact/colmap-app

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: get_version
      run: echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.3.1
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: 3D Platform v${{ steps.get_version.outputs.version }}
        body: |
          ## 🚀 What's New in v${{ steps.get_version.outputs.version }}

          ### Changes
          ${{ steps.changelog.outputs.changelog }}

          ### 🐳 Docker Images
          - Backend: `ghcr.io/marco-interact/3d-visualization-platform-backend:v${{ steps.get_version.outputs.version }}`
          - Frontend: `ghcr.io/marco-interact/3d-visualization-platform-frontend:v${{ steps.get_version.outputs.version }}`

          ### 🏗️ Deployment
          ```bash
          # Pull the latest release
          git clone https://github.com/marco-interact/3d-visualization-platform.git
          cd 3d-visualization-platform
          git checkout v${{ steps.get_version.outputs.version }}

          # Deploy with Docker Compose
          ./scripts/staging-deploy.sh
          ```

          ### 📋 Requirements
          - Docker & Docker Compose
          - 4GB+ RAM
          - 10GB+ disk space for COLMAP processing

          ### 🔗 Quick Links
          - [📚 Documentation](https://github.com/marco-interact/3d-visualization-platform#readme)
          - [🏗️ Staging Setup](https://github.com/marco-interact/3d-visualization-platform/blob/main/STAGING.md)
          - [🐛 Report Issues](https://github.com/marco-interact/3d-visualization-platform/issues)
        draft: false
        prerelease: false

  build-release-assets:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push release images
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        
        # Build and push backend
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --target production \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:v$VERSION \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest \
          --push \
          -f docker/backend/Dockerfile \
          ./backend

        # Build and push frontend
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --target production \
          --build-arg REACT_APP_API_URL=http://localhost:8000/api/v1 \
          --build-arg REACT_APP_ENVIRONMENT=production \
          --build-arg REACT_APP_VERSION=v$VERSION \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:v$VERSION \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest \
          --push \
          -f docker/frontend/Dockerfile \
          ./frontend

    - name: Create deployment package
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        mkdir -p release-package
        
        # Copy essential files
        cp docker-compose.yml release-package/
        cp docker-compose.staging.yml release-package/
        cp env.example release-package/
        cp env.staging release-package/
        cp -r scripts/ release-package/
        cp -r docker/ release-package/
        cp README.md release-package/
        cp STAGING.md release-package/
        
        # Create version file
        echo "v$VERSION" > release-package/VERSION
        
        # Create deployment instructions
        cat > release-package/DEPLOY.md << EOF
        # 3D Visualization Platform v$VERSION - Deployment Guide

        ## Quick Start

        1. **Environment Setup**:
           \`\`\`bash
           cp env.example .env
           # Edit .env with your configuration
           \`\`\`

        2. **Deploy Development**:
           \`\`\`bash
           docker-compose up -d
           \`\`\`

        3. **Deploy Staging**:
           \`\`\`bash
           ./scripts/staging-deploy.sh
           \`\`\`

        ## Access Points

        - **Frontend**: http://localhost:3000
        - **Backend**: http://localhost:8000
        - **API Docs**: http://localhost:8000/docs
        - **Staging**: http://localhost:8080

        ## Docker Images

        - Backend: \`ghcr.io/marco-interact/3d-visualization-platform-backend:v$VERSION\`
        - Frontend: \`ghcr.io/marco-interact/3d-visualization-platform-frontend:v$VERSION\`
        EOF
        
        # Create archive
        tar -czf 3d-platform-v$VERSION.tar.gz -C release-package .
        zip -r 3d-platform-v$VERSION.zip release-package/

    - name: Upload Release Asset (tar.gz)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./3d-platform-v${{ needs.create-release.outputs.version }}.tar.gz
        asset_name: 3d-platform-v${{ needs.create-release.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload Release Asset (zip)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./3d-platform-v${{ needs.create-release.outputs.version }}.zip
        asset_name: 3d-platform-v${{ needs.create-release.outputs.version }}.zip
        asset_content_type: application/zip

  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-release-assets]
    if: always()

    steps:
    - name: Notify Success
      if: ${{ needs.build-release-assets.result == 'success' }}
      run: |
        echo "🎉 Release v${{ needs.create-release.outputs.version }} created successfully!"
        echo "📦 Docker images pushed to registry"
        echo "🔗 Release available at: https://github.com/marco-interact/3d-visualization-platform/releases/tag/v${{ needs.create-release.outputs.version }}"

    - name: Notify Failure
      if: ${{ needs.build-release-assets.result == 'failure' }}
      run: |
        echo "❌ Release v${{ needs.create-release.outputs.version }} failed!"
        echo "Check the workflow logs for details."
