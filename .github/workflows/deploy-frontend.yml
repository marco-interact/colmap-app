name: Deploy Frontend to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.js'
      - 'tailwind.config.ts'
      - 'tsconfig.json'
      - 'Dockerfile.frontend'
      - 'cloudbuild-frontend.yaml'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: colmap-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker gcr.io
      
      - name: Deploy Frontend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          source: . # Build from the current directory using the Dockerfile
          # Pass the worker URL to the frontend as an environment variable
          env_vars: "NODE_ENV=production,NEXT_PUBLIC_COLMAP_WORKER_URL=${{ secrets.COLMAP_WORKER_URL }}"
          # Pass build-time arguments to the Cloud Run build process.
          # The NEXT_PUBLIC_COLMAP_WORKER_URL is used by the Next.js app.
          build_env_vars: "NEXT_PUBLIC_COLMAP_WORKER_URL=${{ secrets.COLMAP_WORKER_URL }}"
      
      - name: Get Service URL
        id: get-url
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region=${{ env.REGION }} \
            --format="value(status.url)")
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
      
      - name: Test Deployment
        run: |
          echo "🌐 Frontend deployed to: ${{ steps.get-url.outputs.SERVICE_URL }}"
          echo "❤️ Health check: ${{ steps.get-url.outputs.SERVICE_URL }}/api/health"
          
          # Wait for service to be ready
          sleep 30
          
          # Test health endpoint
          curl -f "${{ steps.get-url.outputs.SERVICE_URL }}/api/health" || exit 1
          echo "✅ Health check passed!"
      
      - name: Summary
        run: |
          echo "🎉 Frontend Deployment Complete!"
          echo "🌐 URL: ${{ steps.get-url.outputs.SERVICE_URL }}"
          echo "📊 Monitor: https://console.cloud.google.com/run/detail/${{ env.REGION }}/${{ env.SERVICE_NAME }}"